/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as ExpensesImport } from './routes/expenses'
import { Route as AboutImport } from './routes/about'
import { Route as IndexImport } from './routes/index'
import { Route as ComponentToasterImport } from './routes/component/toaster'
import { Route as ComponentTextInputImport } from './routes/component/text-input'
import { Route as ComponentTextAreaImport } from './routes/component/text-area'
import { Route as ComponentSubPageHeaderImport } from './routes/component/sub-page-header'
import { Route as ComponentSelectMonthDrawerImport } from './routes/component/select-month-drawer'
import { Route as ComponentInputCategoryTagsImport } from './routes/component/input-category-tags'
import { Route as ComponentIconTestImport } from './routes/component/icon-test'
import { Route as ComponentCategoryTagsImport } from './routes/component/category-tags'
import { Route as ComponentCalendarDrawerImport } from './routes/component/calendar-drawer'
import { Route as ComponentButtonsTestImport } from './routes/component/buttons-test'

// Create/Update Routes

const ExpensesRoute = ExpensesImport.update({
  id: '/expenses',
  path: '/expenses',
  getParentRoute: () => rootRoute,
} as any)

const AboutRoute = AboutImport.update({
  id: '/about',
  path: '/about',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const ComponentToasterRoute = ComponentToasterImport.update({
  id: '/component/toaster',
  path: '/component/toaster',
  getParentRoute: () => rootRoute,
} as any)

const ComponentTextInputRoute = ComponentTextInputImport.update({
  id: '/component/text-input',
  path: '/component/text-input',
  getParentRoute: () => rootRoute,
} as any)

const ComponentTextAreaRoute = ComponentTextAreaImport.update({
  id: '/component/text-area',
  path: '/component/text-area',
  getParentRoute: () => rootRoute,
} as any)

const ComponentSubPageHeaderRoute = ComponentSubPageHeaderImport.update({
  id: '/component/sub-page-header',
  path: '/component/sub-page-header',
  getParentRoute: () => rootRoute,
} as any)

const ComponentSelectMonthDrawerRoute = ComponentSelectMonthDrawerImport.update(
  {
    id: '/component/select-month-drawer',
    path: '/component/select-month-drawer',
    getParentRoute: () => rootRoute,
  } as any,
)

const ComponentInputCategoryTagsRoute = ComponentInputCategoryTagsImport.update(
  {
    id: '/component/input-category-tags',
    path: '/component/input-category-tags',
    getParentRoute: () => rootRoute,
  } as any,
)

const ComponentIconTestRoute = ComponentIconTestImport.update({
  id: '/component/icon-test',
  path: '/component/icon-test',
  getParentRoute: () => rootRoute,
} as any)

const ComponentCategoryTagsRoute = ComponentCategoryTagsImport.update({
  id: '/component/category-tags',
  path: '/component/category-tags',
  getParentRoute: () => rootRoute,
} as any)

const ComponentCalendarDrawerRoute = ComponentCalendarDrawerImport.update({
  id: '/component/calendar-drawer',
  path: '/component/calendar-drawer',
  getParentRoute: () => rootRoute,
} as any)

const ComponentButtonsTestRoute = ComponentButtonsTestImport.update({
  id: '/component/buttons-test',
  path: '/component/buttons-test',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/about': {
      id: '/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutImport
      parentRoute: typeof rootRoute
    }
    '/expenses': {
      id: '/expenses'
      path: '/expenses'
      fullPath: '/expenses'
      preLoaderRoute: typeof ExpensesImport
      parentRoute: typeof rootRoute
    }
    '/component/buttons-test': {
      id: '/component/buttons-test'
      path: '/component/buttons-test'
      fullPath: '/component/buttons-test'
      preLoaderRoute: typeof ComponentButtonsTestImport
      parentRoute: typeof rootRoute
    }
    '/component/calendar-drawer': {
      id: '/component/calendar-drawer'
      path: '/component/calendar-drawer'
      fullPath: '/component/calendar-drawer'
      preLoaderRoute: typeof ComponentCalendarDrawerImport
      parentRoute: typeof rootRoute
    }
    '/component/category-tags': {
      id: '/component/category-tags'
      path: '/component/category-tags'
      fullPath: '/component/category-tags'
      preLoaderRoute: typeof ComponentCategoryTagsImport
      parentRoute: typeof rootRoute
    }
    '/component/icon-test': {
      id: '/component/icon-test'
      path: '/component/icon-test'
      fullPath: '/component/icon-test'
      preLoaderRoute: typeof ComponentIconTestImport
      parentRoute: typeof rootRoute
    }
    '/component/input-category-tags': {
      id: '/component/input-category-tags'
      path: '/component/input-category-tags'
      fullPath: '/component/input-category-tags'
      preLoaderRoute: typeof ComponentInputCategoryTagsImport
      parentRoute: typeof rootRoute
    }
    '/component/select-month-drawer': {
      id: '/component/select-month-drawer'
      path: '/component/select-month-drawer'
      fullPath: '/component/select-month-drawer'
      preLoaderRoute: typeof ComponentSelectMonthDrawerImport
      parentRoute: typeof rootRoute
    }
    '/component/sub-page-header': {
      id: '/component/sub-page-header'
      path: '/component/sub-page-header'
      fullPath: '/component/sub-page-header'
      preLoaderRoute: typeof ComponentSubPageHeaderImport
      parentRoute: typeof rootRoute
    }
    '/component/text-area': {
      id: '/component/text-area'
      path: '/component/text-area'
      fullPath: '/component/text-area'
      preLoaderRoute: typeof ComponentTextAreaImport
      parentRoute: typeof rootRoute
    }
    '/component/text-input': {
      id: '/component/text-input'
      path: '/component/text-input'
      fullPath: '/component/text-input'
      preLoaderRoute: typeof ComponentTextInputImport
      parentRoute: typeof rootRoute
    }
    '/component/toaster': {
      id: '/component/toaster'
      path: '/component/toaster'
      fullPath: '/component/toaster'
      preLoaderRoute: typeof ComponentToasterImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/expenses': typeof ExpensesRoute
  '/component/buttons-test': typeof ComponentButtonsTestRoute
  '/component/calendar-drawer': typeof ComponentCalendarDrawerRoute
  '/component/category-tags': typeof ComponentCategoryTagsRoute
  '/component/icon-test': typeof ComponentIconTestRoute
  '/component/input-category-tags': typeof ComponentInputCategoryTagsRoute
  '/component/select-month-drawer': typeof ComponentSelectMonthDrawerRoute
  '/component/sub-page-header': typeof ComponentSubPageHeaderRoute
  '/component/text-area': typeof ComponentTextAreaRoute
  '/component/text-input': typeof ComponentTextInputRoute
  '/component/toaster': typeof ComponentToasterRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/expenses': typeof ExpensesRoute
  '/component/buttons-test': typeof ComponentButtonsTestRoute
  '/component/calendar-drawer': typeof ComponentCalendarDrawerRoute
  '/component/category-tags': typeof ComponentCategoryTagsRoute
  '/component/icon-test': typeof ComponentIconTestRoute
  '/component/input-category-tags': typeof ComponentInputCategoryTagsRoute
  '/component/select-month-drawer': typeof ComponentSelectMonthDrawerRoute
  '/component/sub-page-header': typeof ComponentSubPageHeaderRoute
  '/component/text-area': typeof ComponentTextAreaRoute
  '/component/text-input': typeof ComponentTextInputRoute
  '/component/toaster': typeof ComponentToasterRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/expenses': typeof ExpensesRoute
  '/component/buttons-test': typeof ComponentButtonsTestRoute
  '/component/calendar-drawer': typeof ComponentCalendarDrawerRoute
  '/component/category-tags': typeof ComponentCategoryTagsRoute
  '/component/icon-test': typeof ComponentIconTestRoute
  '/component/input-category-tags': typeof ComponentInputCategoryTagsRoute
  '/component/select-month-drawer': typeof ComponentSelectMonthDrawerRoute
  '/component/sub-page-header': typeof ComponentSubPageHeaderRoute
  '/component/text-area': typeof ComponentTextAreaRoute
  '/component/text-input': typeof ComponentTextInputRoute
  '/component/toaster': typeof ComponentToasterRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/about'
    | '/expenses'
    | '/component/buttons-test'
    | '/component/calendar-drawer'
    | '/component/category-tags'
    | '/component/icon-test'
    | '/component/input-category-tags'
    | '/component/select-month-drawer'
    | '/component/sub-page-header'
    | '/component/text-area'
    | '/component/text-input'
    | '/component/toaster'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/about'
    | '/expenses'
    | '/component/buttons-test'
    | '/component/calendar-drawer'
    | '/component/category-tags'
    | '/component/icon-test'
    | '/component/input-category-tags'
    | '/component/select-month-drawer'
    | '/component/sub-page-header'
    | '/component/text-area'
    | '/component/text-input'
    | '/component/toaster'
  id:
    | '__root__'
    | '/'
    | '/about'
    | '/expenses'
    | '/component/buttons-test'
    | '/component/calendar-drawer'
    | '/component/category-tags'
    | '/component/icon-test'
    | '/component/input-category-tags'
    | '/component/select-month-drawer'
    | '/component/sub-page-header'
    | '/component/text-area'
    | '/component/text-input'
    | '/component/toaster'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AboutRoute: typeof AboutRoute
  ExpensesRoute: typeof ExpensesRoute
  ComponentButtonsTestRoute: typeof ComponentButtonsTestRoute
  ComponentCalendarDrawerRoute: typeof ComponentCalendarDrawerRoute
  ComponentCategoryTagsRoute: typeof ComponentCategoryTagsRoute
  ComponentIconTestRoute: typeof ComponentIconTestRoute
  ComponentInputCategoryTagsRoute: typeof ComponentInputCategoryTagsRoute
  ComponentSelectMonthDrawerRoute: typeof ComponentSelectMonthDrawerRoute
  ComponentSubPageHeaderRoute: typeof ComponentSubPageHeaderRoute
  ComponentTextAreaRoute: typeof ComponentTextAreaRoute
  ComponentTextInputRoute: typeof ComponentTextInputRoute
  ComponentToasterRoute: typeof ComponentToasterRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AboutRoute: AboutRoute,
  ExpensesRoute: ExpensesRoute,
  ComponentButtonsTestRoute: ComponentButtonsTestRoute,
  ComponentCalendarDrawerRoute: ComponentCalendarDrawerRoute,
  ComponentCategoryTagsRoute: ComponentCategoryTagsRoute,
  ComponentIconTestRoute: ComponentIconTestRoute,
  ComponentInputCategoryTagsRoute: ComponentInputCategoryTagsRoute,
  ComponentSelectMonthDrawerRoute: ComponentSelectMonthDrawerRoute,
  ComponentSubPageHeaderRoute: ComponentSubPageHeaderRoute,
  ComponentTextAreaRoute: ComponentTextAreaRoute,
  ComponentTextInputRoute: ComponentTextInputRoute,
  ComponentToasterRoute: ComponentToasterRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/about",
        "/expenses",
        "/component/buttons-test",
        "/component/calendar-drawer",
        "/component/category-tags",
        "/component/icon-test",
        "/component/input-category-tags",
        "/component/select-month-drawer",
        "/component/sub-page-header",
        "/component/text-area",
        "/component/text-input",
        "/component/toaster"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/about": {
      "filePath": "about.tsx"
    },
    "/expenses": {
      "filePath": "expenses.tsx"
    },
    "/component/buttons-test": {
      "filePath": "component/buttons-test.tsx"
    },
    "/component/calendar-drawer": {
      "filePath": "component/calendar-drawer.tsx"
    },
    "/component/category-tags": {
      "filePath": "component/category-tags.tsx"
    },
    "/component/icon-test": {
      "filePath": "component/icon-test.tsx"
    },
    "/component/input-category-tags": {
      "filePath": "component/input-category-tags.tsx"
    },
    "/component/select-month-drawer": {
      "filePath": "component/select-month-drawer.tsx"
    },
    "/component/sub-page-header": {
      "filePath": "component/sub-page-header.tsx"
    },
    "/component/text-area": {
      "filePath": "component/text-area.tsx"
    },
    "/component/text-input": {
      "filePath": "component/text-input.tsx"
    },
    "/component/toaster": {
      "filePath": "component/toaster.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
