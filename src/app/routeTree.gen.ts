/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as LoginImport } from './routes/login'
import { Route as SettingsIndexImport } from './routes/settings.index'
import { Route as ExpensesIndexImport } from './routes/expenses.index'
import { Route as SettingsAccountImport } from './routes/settings.account'
import { Route as ExpensesUidImport } from './routes/expenses.$uid'
import { Route as ExpensesNewIndexImport } from './routes/expenses.new.index'
import { Route as ExpensesNewCategoriesIndexImport } from './routes/expenses.new.categories.index'
import { Route as ExpensesUidCategoriesIndexImport } from './routes/expenses.$uid.categories.index'
import { Route as ExpensesNewCategoriesCategoryuidIndexImport } from './routes/expenses.new.categories.$category_uid.index'
import { Route as ExpensesUidCategoriesCategoryuidIndexImport } from './routes/expenses.$uid.categories.$category_uid.index'

// Create/Update Routes

const LoginRoute = LoginImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => rootRoute,
} as any)

const SettingsIndexRoute = SettingsIndexImport.update({
  id: '/settings/',
  path: '/settings/',
  getParentRoute: () => rootRoute,
} as any)

const ExpensesIndexRoute = ExpensesIndexImport.update({
  id: '/expenses/',
  path: '/expenses/',
  getParentRoute: () => rootRoute,
} as any)

const SettingsAccountRoute = SettingsAccountImport.update({
  id: '/settings/account',
  path: '/settings/account',
  getParentRoute: () => rootRoute,
} as any)

const ExpensesUidRoute = ExpensesUidImport.update({
  id: '/expenses/$uid',
  path: '/expenses/$uid',
  getParentRoute: () => rootRoute,
} as any)

const ExpensesNewIndexRoute = ExpensesNewIndexImport.update({
  id: '/expenses/new/',
  path: '/expenses/new/',
  getParentRoute: () => rootRoute,
} as any)

const ExpensesNewCategoriesIndexRoute = ExpensesNewCategoriesIndexImport.update(
  {
    id: '/expenses/new/categories/',
    path: '/expenses/new/categories/',
    getParentRoute: () => rootRoute,
  } as any,
)

const ExpensesUidCategoriesIndexRoute = ExpensesUidCategoriesIndexImport.update(
  {
    id: '/categories/',
    path: '/categories/',
    getParentRoute: () => ExpensesUidRoute,
  } as any,
)

const ExpensesNewCategoriesCategoryuidIndexRoute =
  ExpensesNewCategoriesCategoryuidIndexImport.update({
    id: '/expenses/new/categories/$category_uid/',
    path: '/expenses/new/categories/$category_uid/',
    getParentRoute: () => rootRoute,
  } as any)

const ExpensesUidCategoriesCategoryuidIndexRoute =
  ExpensesUidCategoriesCategoryuidIndexImport.update({
    id: '/categories/$category_uid/',
    path: '/categories/$category_uid/',
    getParentRoute: () => ExpensesUidRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginImport
      parentRoute: typeof rootRoute
    }
    '/expenses/$uid': {
      id: '/expenses/$uid'
      path: '/expenses/$uid'
      fullPath: '/expenses/$uid'
      preLoaderRoute: typeof ExpensesUidImport
      parentRoute: typeof rootRoute
    }
    '/settings/account': {
      id: '/settings/account'
      path: '/settings/account'
      fullPath: '/settings/account'
      preLoaderRoute: typeof SettingsAccountImport
      parentRoute: typeof rootRoute
    }
    '/expenses/': {
      id: '/expenses/'
      path: '/expenses'
      fullPath: '/expenses'
      preLoaderRoute: typeof ExpensesIndexImport
      parentRoute: typeof rootRoute
    }
    '/settings/': {
      id: '/settings/'
      path: '/settings'
      fullPath: '/settings'
      preLoaderRoute: typeof SettingsIndexImport
      parentRoute: typeof rootRoute
    }
    '/expenses/new/': {
      id: '/expenses/new/'
      path: '/expenses/new'
      fullPath: '/expenses/new'
      preLoaderRoute: typeof ExpensesNewIndexImport
      parentRoute: typeof rootRoute
    }
    '/expenses/$uid/categories/': {
      id: '/expenses/$uid/categories/'
      path: '/categories'
      fullPath: '/expenses/$uid/categories'
      preLoaderRoute: typeof ExpensesUidCategoriesIndexImport
      parentRoute: typeof ExpensesUidImport
    }
    '/expenses/new/categories/': {
      id: '/expenses/new/categories/'
      path: '/expenses/new/categories'
      fullPath: '/expenses/new/categories'
      preLoaderRoute: typeof ExpensesNewCategoriesIndexImport
      parentRoute: typeof rootRoute
    }
    '/expenses/$uid/categories/$category_uid/': {
      id: '/expenses/$uid/categories/$category_uid/'
      path: '/categories/$category_uid'
      fullPath: '/expenses/$uid/categories/$category_uid'
      preLoaderRoute: typeof ExpensesUidCategoriesCategoryuidIndexImport
      parentRoute: typeof ExpensesUidImport
    }
    '/expenses/new/categories/$category_uid/': {
      id: '/expenses/new/categories/$category_uid/'
      path: '/expenses/new/categories/$category_uid'
      fullPath: '/expenses/new/categories/$category_uid'
      preLoaderRoute: typeof ExpensesNewCategoriesCategoryuidIndexImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

interface ExpensesUidRouteChildren {
  ExpensesUidCategoriesIndexRoute: typeof ExpensesUidCategoriesIndexRoute
  ExpensesUidCategoriesCategoryuidIndexRoute: typeof ExpensesUidCategoriesCategoryuidIndexRoute
}

const ExpensesUidRouteChildren: ExpensesUidRouteChildren = {
  ExpensesUidCategoriesIndexRoute: ExpensesUidCategoriesIndexRoute,
  ExpensesUidCategoriesCategoryuidIndexRoute:
    ExpensesUidCategoriesCategoryuidIndexRoute,
}

const ExpensesUidRouteWithChildren = ExpensesUidRoute._addFileChildren(
  ExpensesUidRouteChildren,
)

export interface FileRoutesByFullPath {
  '/login': typeof LoginRoute
  '/expenses/$uid': typeof ExpensesUidRouteWithChildren
  '/settings/account': typeof SettingsAccountRoute
  '/expenses': typeof ExpensesIndexRoute
  '/settings': typeof SettingsIndexRoute
  '/expenses/new': typeof ExpensesNewIndexRoute
  '/expenses/$uid/categories': typeof ExpensesUidCategoriesIndexRoute
  '/expenses/new/categories': typeof ExpensesNewCategoriesIndexRoute
  '/expenses/$uid/categories/$category_uid': typeof ExpensesUidCategoriesCategoryuidIndexRoute
  '/expenses/new/categories/$category_uid': typeof ExpensesNewCategoriesCategoryuidIndexRoute
}

export interface FileRoutesByTo {
  '/login': typeof LoginRoute
  '/expenses/$uid': typeof ExpensesUidRouteWithChildren
  '/settings/account': typeof SettingsAccountRoute
  '/expenses': typeof ExpensesIndexRoute
  '/settings': typeof SettingsIndexRoute
  '/expenses/new': typeof ExpensesNewIndexRoute
  '/expenses/$uid/categories': typeof ExpensesUidCategoriesIndexRoute
  '/expenses/new/categories': typeof ExpensesNewCategoriesIndexRoute
  '/expenses/$uid/categories/$category_uid': typeof ExpensesUidCategoriesCategoryuidIndexRoute
  '/expenses/new/categories/$category_uid': typeof ExpensesNewCategoriesCategoryuidIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/login': typeof LoginRoute
  '/expenses/$uid': typeof ExpensesUidRouteWithChildren
  '/settings/account': typeof SettingsAccountRoute
  '/expenses/': typeof ExpensesIndexRoute
  '/settings/': typeof SettingsIndexRoute
  '/expenses/new/': typeof ExpensesNewIndexRoute
  '/expenses/$uid/categories/': typeof ExpensesUidCategoriesIndexRoute
  '/expenses/new/categories/': typeof ExpensesNewCategoriesIndexRoute
  '/expenses/$uid/categories/$category_uid/': typeof ExpensesUidCategoriesCategoryuidIndexRoute
  '/expenses/new/categories/$category_uid/': typeof ExpensesNewCategoriesCategoryuidIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/login'
    | '/expenses/$uid'
    | '/settings/account'
    | '/expenses'
    | '/settings'
    | '/expenses/new'
    | '/expenses/$uid/categories'
    | '/expenses/new/categories'
    | '/expenses/$uid/categories/$category_uid'
    | '/expenses/new/categories/$category_uid'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/login'
    | '/expenses/$uid'
    | '/settings/account'
    | '/expenses'
    | '/settings'
    | '/expenses/new'
    | '/expenses/$uid/categories'
    | '/expenses/new/categories'
    | '/expenses/$uid/categories/$category_uid'
    | '/expenses/new/categories/$category_uid'
  id:
    | '__root__'
    | '/login'
    | '/expenses/$uid'
    | '/settings/account'
    | '/expenses/'
    | '/settings/'
    | '/expenses/new/'
    | '/expenses/$uid/categories/'
    | '/expenses/new/categories/'
    | '/expenses/$uid/categories/$category_uid/'
    | '/expenses/new/categories/$category_uid/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  LoginRoute: typeof LoginRoute
  ExpensesUidRoute: typeof ExpensesUidRouteWithChildren
  SettingsAccountRoute: typeof SettingsAccountRoute
  ExpensesIndexRoute: typeof ExpensesIndexRoute
  SettingsIndexRoute: typeof SettingsIndexRoute
  ExpensesNewIndexRoute: typeof ExpensesNewIndexRoute
  ExpensesNewCategoriesIndexRoute: typeof ExpensesNewCategoriesIndexRoute
  ExpensesNewCategoriesCategoryuidIndexRoute: typeof ExpensesNewCategoriesCategoryuidIndexRoute
}

const rootRouteChildren: RootRouteChildren = {
  LoginRoute: LoginRoute,
  ExpensesUidRoute: ExpensesUidRouteWithChildren,
  SettingsAccountRoute: SettingsAccountRoute,
  ExpensesIndexRoute: ExpensesIndexRoute,
  SettingsIndexRoute: SettingsIndexRoute,
  ExpensesNewIndexRoute: ExpensesNewIndexRoute,
  ExpensesNewCategoriesIndexRoute: ExpensesNewCategoriesIndexRoute,
  ExpensesNewCategoriesCategoryuidIndexRoute:
    ExpensesNewCategoriesCategoryuidIndexRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/login",
        "/expenses/$uid",
        "/settings/account",
        "/expenses/",
        "/settings/",
        "/expenses/new/",
        "/expenses/new/categories/",
        "/expenses/new/categories/$category_uid/"
      ]
    },
    "/login": {
      "filePath": "login.tsx"
    },
    "/expenses/$uid": {
      "filePath": "expenses.$uid.tsx",
      "children": [
        "/expenses/$uid/categories/",
        "/expenses/$uid/categories/$category_uid/"
      ]
    },
    "/settings/account": {
      "filePath": "settings.account.tsx"
    },
    "/expenses/": {
      "filePath": "expenses.index.tsx"
    },
    "/settings/": {
      "filePath": "settings.index.tsx"
    },
    "/expenses/new/": {
      "filePath": "expenses.new.index.tsx"
    },
    "/expenses/$uid/categories/": {
      "filePath": "expenses.$uid.categories.index.tsx",
      "parent": "/expenses/$uid"
    },
    "/expenses/new/categories/": {
      "filePath": "expenses.new.categories.index.tsx"
    },
    "/expenses/$uid/categories/$category_uid/": {
      "filePath": "expenses.$uid.categories.$category_uid.index.tsx",
      "parent": "/expenses/$uid"
    },
    "/expenses/new/categories/$category_uid/": {
      "filePath": "expenses.new.categories.$category_uid.index.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
